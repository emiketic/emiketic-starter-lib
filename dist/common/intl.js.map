{"version":3,"sources":["../../src/common/intl.js"],"names":["TIME_ZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","defineLocale","localeCode","defaults","currency","locale","$t","text","args","forEach","arg","replace","number","value","options","toLocaleString","style","date","toLocaleDateString","time","hour","minute","toLocaleTimeString","Object","assign","timestamp","$intl","en","current"],"mappings":";;;;;;;;;;;;AAAO,IAAMA,SAAS,GAAGC,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAA1D;;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAiD;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACtDA,EAAAA,QAAQ;AACNH,IAAAA,QAAQ,EAAEJ,SADJ;AAENQ,IAAAA,QAAQ,EAAE;AAFJ,KAGHD,QAHG,CAAR;AAMA,MAAME,MAAM,GAAG;AACbC,IAAAA,EADa,cACVC,IADU,EACK;AAAA,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAChBA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD;AAAA,eAAUH,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,KAAb,EAAoBD,GAApB,CAAjB;AAAA,OAAb;AACA,aAAOH,IAAP;AACD,KAJY;AAMbK,IAAAA,MANa,kBAMNC,KANM,EAMe;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC1B,aAAOD,KAAK,CAACE,cAAN,CAAqBb,UAArB,EAAiCY,OAAjC,CAAP;AACD,KARY;AAUb;AACA;AACA;AAEAV,IAAAA,QAda,oBAcJS,KAdI,EAc+C;AAAA,UAA5CT,SAA4C,uEAAjCD,QAAQ,CAACC,QAAwB;;AAAA,UAAdU,OAAc,uEAAJ,EAAI;AAC1D,aAAOD,KAAK,CAACE,cAAN,CAAqBb,UAArB;AACLc,QAAAA,KAAK,EAAE,UADF;AAELZ,QAAAA,QAAQ,EAARA;AAFK,SAGFU,OAHE,EAAP;AAKD,KApBY;AAsBbG,IAAAA,IAtBa,gBAsBRJ,KAtBQ,EAsBa;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACxB,aAAOD,KAAK,CAACK,kBAAN,CAAyBhB,UAAzB,oBACFY,OADE;AAELd,QAAAA,QAAQ,EAAEc,OAAO,CAACd,QAAR,IAAoBG,QAAQ,CAACH;AAFlC,SAAP;AAID,KA3BY;AA6BbmB,IAAAA,IA7Ba,gBA8BXN,KA9BW,EAmCX;AAAA,UAJAC,OAIA,uEAJU;AACRM,QAAAA,IAAI,EAAE,SADE;AAERC,QAAAA,MAAM,EAAE;AAFA,OAIV;AACA,aAAOR,KAAK,CAACS,kBAAN,CAAyBpB,UAAzB,oBACFY,OADE;AAELd,QAAAA,QAAQ,EAAEc,OAAO,CAACd,QAAR,IAAoBG,QAAQ,CAACH;AAFlC,SAAP;AAID;AAxCY,GAAf;AA2CAuB,EAAAA,MAAM,CAACC,MAAP,CAAcnB,MAAd,EAAsB;AACpBoB,IAAAA,SADoB,qBACVZ,KADU,EACH;AACf,uBAAUR,MAAM,CAACY,IAAP,CAAYJ,KAAZ,CAAV,cAAgCR,MAAM,CAACc,IAAP,CAAYN,KAAZ,CAAhC;AACD;AAHmB,GAAtB;AAMA,SAAOR,MAAP;AACD;;AAED,IAAMqB,KAAK,GAAG,EAAd;AAEAA,KAAK,CAACC,EAAN,GAAW1B,YAAY,CAAC,IAAD,CAAvB;AAEAyB,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACC,EAAtB;eAEeD,K","sourcesContent":["export const TIME_ZONE = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\nexport function defineLocale(localeCode, defaults = {}) {\n  defaults = {\n    timeZone: TIME_ZONE,\n    currency: 'USD',\n    ...defaults,\n  };\n\n  const locale = {\n    $t(text, ...args) {\n      args.forEach((arg) => (text = text.replace('%{}', arg)));\n      return text;\n    },\n\n    number(value, options = {}) {\n      return value.toLocaleString(localeCode, options);\n    },\n\n    // currency(value, currency = defaults.currency, options = {}) {\n    //   return `${value.toLocaleString(localeCode, options)} ${currency}`;\n    // },\n\n    currency(value, currency = defaults.currency, options = {}) {\n      return value.toLocaleString(localeCode, {\n        style: 'currency',\n        currency,\n        ...options,\n      });\n    },\n\n    date(value, options = {}) {\n      return value.toLocaleDateString(localeCode, {\n        ...options,\n        timeZone: options.timeZone || defaults.timeZone,\n      });\n    },\n\n    time(\n      value,\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n      },\n    ) {\n      return value.toLocaleTimeString(localeCode, {\n        ...options,\n        timeZone: options.timeZone || defaults.timeZone,\n      });\n    },\n  };\n\n  Object.assign(locale, {\n    timestamp(value) {\n      return `${locale.date(value)} ${locale.time(value)}`;\n    },\n  });\n\n  return locale;\n}\n\nconst $intl = {};\n\n$intl.en = defineLocale('en');\n\n$intl.current = $intl.en;\n\nexport default $intl;\n"],"file":"intl.js"}